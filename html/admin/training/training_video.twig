{% extends "assets/template.twig" %}
{% block content %}
<div id="player"></div>
<script>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
            height: '390',
            width: '640',
            playerVars: {
                autoplay: 0,
                cc_load_policy: 1,
                cc_lang_pref: 'en',
                controls: 1,
                disablekb: 1,
                rel: 0,
                playsinline: 1,
                fs: 1,
                hl: 'en',
                iv_load_policy: 1,
                loop: 0,
                modestbranding: 0,
            },
            videoId: 'jNQXAC9IVRw',
            events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange
            }
        });
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
        //event.target.playVideo();
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    var done = false;
    function onPlayerStateChange(event) {
        console.log(event.data)
        if (event.data == YT.PlayerState.ENDED && player.getDuration() > 0 && player.getDuration() == player.getCurrentTime()) {
            alert("Finished");
        }
    }
    function stopVideo() {
        player.stopVideo();
    }
</script>
{% endblock %}
